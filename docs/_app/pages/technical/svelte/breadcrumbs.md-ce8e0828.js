import{S as a,i as n,s,e as t,t as e,k as o,c as p,a as c,g as r,d as l,n as i,b as u,f as h,D as k,E as d}from"../../../chunks/vendor-f2bba630.js";function m(a){let n,s,m,f,v,b,g,y,w,E,O,T,C,P,S,x,D,H,_,A,K,L,W,q,I,B,j,M,R,U,N,$,F,z,Q,G,J,V,X,Y,Z,aa,na,sa,ta,ea,oa,pa,ca,ra,la,ia,ua,ha,ka,da,ma,fa,va,ba,ga,ya,wa,Ea,Oa,Ta,Ca,Pa,Sa,xa,Da,Ha,_a,Aa,Ka,La,Wa,qa,Ia,Ba,ja,Ma,Ra,Ua,Na,$a,Fa,za,Qa,Ga,Ja,Va,Xa,Ya,Za,an,nn,sn,tn,en,on,pn,cn,rn,ln,un,hn,kn,dn,mn,fn,vn,bn,gn,yn,wn,En,On,Tn,Cn,Pn,Sn,xn,Dn,Hn,_n,An,Kn,Ln,Wn,qn,In,Bn,jn,Mn,Rn,Un,Nn,$n,Fn;return{c(){n=t("p"),s=e("A quick and dirty way to add breadcrumbs to your\n"),m=t("a"),f=e("SvelteKit"),v=e(" application using "),b=t("code"),g=e("load()"),y=e("."),w=o(),E=t("hr"),O=o(),T=t("h2"),C=e("What are breadcrumbs?"),P=o(),S=t("p"),x=e("Breadcrumbs provide a visual indicator to a user where they are located in the\nhierarchy of pages of a website. They also provide a quick way to navigate the\npath back to the root of the hierarchy by adding links:"),D=o(),H=t("blockquote"),_=t("u"),A=e("Home"),K=e(" > "),L=t("u"),W=e("Technical"),q=e(" > "),I=t("u"),B=e("Svelte"),j=e(" > Breadcrumbs"),M=o(),R=t("h2"),U=e("Our goal?"),N=o(),$=t("p"),F=e("We want to build a simple breadcrumb component. We do not want to manually\ninclude the component on each page, nor manage it’s contents. The component\nmust update every time the user moves to a different page."),z=o(),Q=t("h2"),G=e("Method"),J=o(),V=t("p"),X=e("SvelteKit uses a filesystem-based router. Files named "),Y=t("code"),Z=e("__layout.svelte"),aa=e("\ndetermine the layout for the current, page and pages below itself in the\nfile hierarchy. We can use use SvelteKit’s "),na=t("code"),sa=e("load"),ta=e(" function to determine\nwhat the current page is, and pass that location to a breadcrumb component\nwhich we add to the layout."),ea=o(),oa=t("h3"),pa=e("The breadcrumb component"),ca=o(),ra=t("p"),la=e("Our breadcrumb component is a normal Svelte component, accepting the current\npath as a prop, and displays some variation of it as a breadcrumb (say\n"),ia=t("code"),ua=e("$lib/components/readcrumb.svelte"),ha=e("):"),ka=o(),da=t("pre"),ma=o(),fa=t("h3"),va=e("The "),ba=t("code"),ga=e("load"),ya=e(" function"),wa=o(),Ea=t("p"),Oa=e("If exported from a page or layout, "),Ta=t("code"),Ca=e("load()"),Pa=e(" will run before the component\nis created. "),Sa=t("code"),xa=e("load()"),Da=e(" is defined as:"),Ha=o(),_a=t("pre"),Aa=o(),Ka=t("p"),La=t("code"),Wa=e("page.path"),qa=e(" is the full path to the component. This is the string that will\nbe passed to the breadcrumb component for rendering."),Ia=o(),Ba=t("h3"),ja=t("code"),Ma=e("__layout.svelte"),Ra=o(),Ua=t("p"),Na=e("In "),$a=t("code"),Fa=e("src/routes/__layout.svelte"),za=e(", we pull out the path and pass it to the\nlayout as a prop. Note that "),Qa=t("code"),Ga=e("load()"),Ja=e(" runs in "),Va=t("code"),Xa=e("module"),Ya=e(" context:"),Za=o(),an=t("pre"),nn=o(),sn=t("p"),tn=e("As per "),en=t("a"),on=e("the manual"),pn=e(", "),cn=t("code"),rn=e("load()"),ln=e(" is\nreactive, and will run whenever "),un=t("code"),hn=e("page.path"),kn=e(" changes. This allows our\nbreadcrumb to update automatically."),dn=o(),mn=t("p"),fn=e("An implementation can be seen on this website, at the top of the page."),vn=o(),bn=t("h2"),gn=e("Summary"),yn=o(),wn=t("p"),En=e("We created a breadcrumb component that is simple, requires no manual\nintervention for either it’s inclusion or management, and is fully\nreactive. New pages can be added to the application with no regard to\nthe breadcrumb, and it will act accordingly."),On=o(),Tn=t("h3"),Cn=e("Improvements"),Pn=o(),Sn=t("ul"),xn=t("li"),Dn=e("Our example solution above only shows elements from the path. Real\napplications may want to change these to use language more contextually\ncorrect. One way would be to map each path token to a dictionary; this\nwould require maintaining the dictionary every time a new page is added."),Hn=o(),_n=t("h2"),An=e("More information"),Kn=o(),Ln=t("ul"),Wn=t("li"),qn=t("a"),In=e("SvelteKit"),Bn=o(),jn=t("li"),Mn=t("a"),Rn=e("SvelteKit Loading"),Un=e(" and the "),Nn=t("code"),$n=e("load()"),Fn=e(" function"),this.h()},l(a){n=p(a,"P",{});var t=c(n);s=r(t,"A quick and dirty way to add breadcrumbs to your\n"),m=p(t,"A",{href:!0,rel:!0});var e=c(m);f=r(e,"SvelteKit"),e.forEach(l),v=r(t," application using "),b=p(t,"CODE",{});var o=c(b);g=r(o,"load()"),o.forEach(l),y=r(t,"."),t.forEach(l),w=i(a),E=p(a,"HR",{}),O=i(a),T=p(a,"H2",{});var u=c(T);C=r(u,"What are breadcrumbs?"),u.forEach(l),P=i(a),S=p(a,"P",{});var h=c(S);x=r(h,"Breadcrumbs provide a visual indicator to a user where they are located in the\nhierarchy of pages of a website. They also provide a quick way to navigate the\npath back to the root of the hierarchy by adding links:"),h.forEach(l),D=i(a),H=p(a,"BLOCKQUOTE",{});var k=c(H);_=p(k,"U",{});var d=c(_);A=r(d,"Home"),d.forEach(l),K=r(k," > "),L=p(k,"U",{});var zn=c(L);W=r(zn,"Technical"),zn.forEach(l),q=r(k," > "),I=p(k,"U",{});var Qn=c(I);B=r(Qn,"Svelte"),Qn.forEach(l),j=r(k," > Breadcrumbs"),k.forEach(l),M=i(a),R=p(a,"H2",{});var Gn=c(R);U=r(Gn,"Our goal?"),Gn.forEach(l),N=i(a),$=p(a,"P",{});var Jn=c($);F=r(Jn,"We want to build a simple breadcrumb component. We do not want to manually\ninclude the component on each page, nor manage it’s contents. The component\nmust update every time the user moves to a different page."),Jn.forEach(l),z=i(a),Q=p(a,"H2",{});var Vn=c(Q);G=r(Vn,"Method"),Vn.forEach(l),J=i(a),V=p(a,"P",{});var Xn=c(V);X=r(Xn,"SvelteKit uses a filesystem-based router. Files named "),Y=p(Xn,"CODE",{});var Yn=c(Y);Z=r(Yn,"__layout.svelte"),Yn.forEach(l),aa=r(Xn,"\ndetermine the layout for the current, page and pages below itself in the\nfile hierarchy. We can use use SvelteKit’s "),na=p(Xn,"CODE",{});var Zn=c(na);sa=r(Zn,"load"),Zn.forEach(l),ta=r(Xn," function to determine\nwhat the current page is, and pass that location to a breadcrumb component\nwhich we add to the layout."),Xn.forEach(l),ea=i(a),oa=p(a,"H3",{});var as=c(oa);pa=r(as,"The breadcrumb component"),as.forEach(l),ca=i(a),ra=p(a,"P",{});var ns=c(ra);la=r(ns,"Our breadcrumb component is a normal Svelte component, accepting the current\npath as a prop, and displays some variation of it as a breadcrumb (say\n"),ia=p(ns,"CODE",{});var ss=c(ia);ua=r(ss,"$lib/components/readcrumb.svelte"),ss.forEach(l),ha=r(ns,"):"),ns.forEach(l),ka=i(a),da=p(a,"PRE",{class:!0}),c(da).forEach(l),ma=i(a),fa=p(a,"H3",{});var ts=c(fa);va=r(ts,"The "),ba=p(ts,"CODE",{});var es=c(ba);ga=r(es,"load"),es.forEach(l),ya=r(ts," function"),ts.forEach(l),wa=i(a),Ea=p(a,"P",{});var os=c(Ea);Oa=r(os,"If exported from a page or layout, "),Ta=p(os,"CODE",{});var ps=c(Ta);Ca=r(ps,"load()"),ps.forEach(l),Pa=r(os," will run before the component\nis created. "),Sa=p(os,"CODE",{});var cs=c(Sa);xa=r(cs,"load()"),cs.forEach(l),Da=r(os," is defined as:"),os.forEach(l),Ha=i(a),_a=p(a,"PRE",{class:!0}),c(_a).forEach(l),Aa=i(a),Ka=p(a,"P",{});var rs=c(Ka);La=p(rs,"CODE",{});var ls=c(La);Wa=r(ls,"page.path"),ls.forEach(l),qa=r(rs," is the full path to the component. This is the string that will\nbe passed to the breadcrumb component for rendering."),rs.forEach(l),Ia=i(a),Ba=p(a,"H3",{});var is=c(Ba);ja=p(is,"CODE",{});var us=c(ja);Ma=r(us,"__layout.svelte"),us.forEach(l),is.forEach(l),Ra=i(a),Ua=p(a,"P",{});var hs=c(Ua);Na=r(hs,"In "),$a=p(hs,"CODE",{});var ks=c($a);Fa=r(ks,"src/routes/__layout.svelte"),ks.forEach(l),za=r(hs,", we pull out the path and pass it to the\nlayout as a prop. Note that "),Qa=p(hs,"CODE",{});var ds=c(Qa);Ga=r(ds,"load()"),ds.forEach(l),Ja=r(hs," runs in "),Va=p(hs,"CODE",{});var ms=c(Va);Xa=r(ms,"module"),ms.forEach(l),Ya=r(hs," context:"),hs.forEach(l),Za=i(a),an=p(a,"PRE",{class:!0}),c(an).forEach(l),nn=i(a),sn=p(a,"P",{});var fs=c(sn);tn=r(fs,"As per "),en=p(fs,"A",{href:!0,rel:!0});var vs=c(en);on=r(vs,"the manual"),vs.forEach(l),pn=r(fs,", "),cn=p(fs,"CODE",{});var bs=c(cn);rn=r(bs,"load()"),bs.forEach(l),ln=r(fs," is\nreactive, and will run whenever "),un=p(fs,"CODE",{});var gs=c(un);hn=r(gs,"page.path"),gs.forEach(l),kn=r(fs," changes. This allows our\nbreadcrumb to update automatically."),fs.forEach(l),dn=i(a),mn=p(a,"P",{});var ys=c(mn);fn=r(ys,"An implementation can be seen on this website, at the top of the page."),ys.forEach(l),vn=i(a),bn=p(a,"H2",{});var ws=c(bn);gn=r(ws,"Summary"),ws.forEach(l),yn=i(a),wn=p(a,"P",{});var Es=c(wn);En=r(Es,"We created a breadcrumb component that is simple, requires no manual\nintervention for either it’s inclusion or management, and is fully\nreactive. New pages can be added to the application with no regard to\nthe breadcrumb, and it will act accordingly."),Es.forEach(l),On=i(a),Tn=p(a,"H3",{});var Os=c(Tn);Cn=r(Os,"Improvements"),Os.forEach(l),Pn=i(a),Sn=p(a,"UL",{});var Ts=c(Sn);xn=p(Ts,"LI",{});var Cs=c(xn);Dn=r(Cs,"Our example solution above only shows elements from the path. Real\napplications may want to change these to use language more contextually\ncorrect. One way would be to map each path token to a dictionary; this\nwould require maintaining the dictionary every time a new page is added."),Cs.forEach(l),Ts.forEach(l),Hn=i(a),_n=p(a,"H2",{});var Ps=c(_n);An=r(Ps,"More information"),Ps.forEach(l),Kn=i(a),Ln=p(a,"UL",{});var Ss=c(Ln);Wn=p(Ss,"LI",{});var xs=c(Wn);qn=p(xs,"A",{href:!0,rel:!0});var Ds=c(qn);In=r(Ds,"SvelteKit"),Ds.forEach(l),xs.forEach(l),Bn=i(Ss),jn=p(Ss,"LI",{});var Hs=c(jn);Mn=p(Hs,"A",{href:!0,rel:!0});var _s=c(Mn);Rn=r(_s,"SvelteKit Loading"),_s.forEach(l),Un=r(Hs," and the "),Nn=p(Hs,"CODE",{});var As=c(Nn);$n=r(As,"load()"),As.forEach(l),Fn=r(Hs," function"),Hs.forEach(l),Ss.forEach(l),this.h()},h(){u(m,"href","https://kit.svelte.dev"),u(m,"rel","nofollow"),u(da,"class","language-js"),u(_a,"class","language-js"),u(an,"class","language-js"),u(en,"href","https://kit.svelte.dev/docs#loading-input"),u(en,"rel","nofollow"),u(qn,"href","https://kit.svelte.dev"),u(qn,"rel","nofollow"),u(Mn,"href","https://kit.svelte.dev/docs#loading"),u(Mn,"rel","nofollow")},m(a,t){h(a,n,t),k(n,s),k(n,m),k(m,f),k(n,v),k(n,b),k(b,g),k(n,y),h(a,w,t),h(a,E,t),h(a,O,t),h(a,T,t),k(T,C),h(a,P,t),h(a,S,t),k(S,x),h(a,D,t),h(a,H,t),k(H,_),k(_,A),k(H,K),k(H,L),k(L,W),k(H,q),k(H,I),k(I,B),k(H,j),h(a,M,t),h(a,R,t),k(R,U),h(a,N,t),h(a,$,t),k($,F),h(a,z,t),h(a,Q,t),k(Q,G),h(a,J,t),h(a,V,t),k(V,X),k(V,Y),k(Y,Z),k(V,aa),k(V,na),k(na,sa),k(V,ta),h(a,ea,t),h(a,oa,t),k(oa,pa),h(a,ca,t),h(a,ra,t),k(ra,la),k(ra,ia),k(ia,ua),k(ra,ha),h(a,ka,t),h(a,da,t),da.innerHTML='<code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>\n    <span class="token keyword">export</span> <span class="token keyword">let</span> path<span class="token punctuation">;</span>\n\n    $<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n        <span class="token comment">// Remove zero-length tokens.</span>\n        <span class="token keyword">const</span> tokens <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token operator">=></span> t <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Create &#123; label, href &#125; pairs for each token.</span>\n        <span class="token keyword">let</span> tokenPath <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n        crumbs <span class="token operator">=</span> tokens<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n            tokenPath <span class="token operator">+=</span> <span class="token string">\'/\'</span> <span class="token operator">+</span> t<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n                label<span class="token operator">:</span> t<span class="token punctuation">,</span>\n                href<span class="token operator">:</span> tokenPath<span class="token punctuation">,</span>\n            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Add a way to get home too.</span>\n        crumbs<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> label<span class="token operator">:</span> <span class="token string">\'home\'</span><span class="token punctuation">,</span> href<span class="token operator">:</span> <span class="token string">\'/\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token punctuation">&#123;</span>#each crumbs <span class="token keyword">as</span> c<span class="token punctuation">,</span> i<span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> i <span class="token operator">==</span> crumbs<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span>\n        <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>label<span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#123;</span><span class="token operator">:</span><span class="token keyword">else</span><span class="token punctuation">&#125;</span>\n        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>href<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>label<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>\n    <span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#123;</span><span class="token operator">/</span>each<span class="token punctuation">&#125;</span></code>',h(a,ma,t),h(a,fa,t),k(fa,va),k(fa,ba),k(ba,ga),k(fa,ya),h(a,wa,t),h(a,Ea,t),k(Ea,Oa),k(Ea,Ta),k(Ta,Ca),k(Ea,Pa),k(Ea,Sa),k(Sa,xa),k(Ea,Da),h(a,Ha,t),h(a,_a,t),_a.innerHTML='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> page<span class="token punctuation">,</span> fetch<span class="token punctuation">,</span> session<span class="token punctuation">,</span> context <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span></code>',h(a,Aa,t),h(a,Ka,t),k(Ka,La),k(La,Wa),k(Ka,qa),h(a,Ia,t),h(a,Ba,t),k(Ba,ja),k(ja,Ma),h(a,Ra,t),h(a,Ua,t),k(Ua,Na),k(Ua,$a),k($a,Fa),k(Ua,za),k(Ua,Qa),k(Qa,Ga),k(Ua,Ja),k(Ua,Va),k(Va,Xa),k(Ua,Ya),h(a,Za,t),h(a,an,t),an.innerHTML='<code class="language-js"><span class="token operator">&lt;</span>script context<span class="token operator">=</span><span class="token string">"module"</span><span class="token operator">></span>\n    <span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">load</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> page <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n            props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n                path<span class="token operator">:</span> page<span class="token punctuation">.</span>path\n            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>script<span class="token operator">></span>\n    <span class="token keyword">import</span> Breadcrumb <span class="token keyword">from</span> <span class="token string">\'$lib/components/Breadcrumb.svelte\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">let</span> path<span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>Breadcrumb <span class="token punctuation">&#123;</span>path<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span></code>',h(a,nn,t),h(a,sn,t),k(sn,tn),k(sn,en),k(en,on),k(sn,pn),k(sn,cn),k(cn,rn),k(sn,ln),k(sn,un),k(un,hn),k(sn,kn),h(a,dn,t),h(a,mn,t),k(mn,fn),h(a,vn,t),h(a,bn,t),k(bn,gn),h(a,yn,t),h(a,wn,t),k(wn,En),h(a,On,t),h(a,Tn,t),k(Tn,Cn),h(a,Pn,t),h(a,Sn,t),k(Sn,xn),k(xn,Dn),h(a,Hn,t),h(a,_n,t),k(_n,An),h(a,Kn,t),h(a,Ln,t),k(Ln,Wn),k(Wn,qn),k(qn,In),k(Ln,Bn),k(Ln,jn),k(jn,Mn),k(Mn,Rn),k(jn,Un),k(jn,Nn),k(Nn,$n),k(jn,Fn)},p:d,i:d,o:d,d(a){a&&l(n),a&&l(w),a&&l(E),a&&l(O),a&&l(T),a&&l(P),a&&l(S),a&&l(D),a&&l(H),a&&l(M),a&&l(R),a&&l(N),a&&l($),a&&l(z),a&&l(Q),a&&l(J),a&&l(V),a&&l(ea),a&&l(oa),a&&l(ca),a&&l(ra),a&&l(ka),a&&l(da),a&&l(ma),a&&l(fa),a&&l(wa),a&&l(Ea),a&&l(Ha),a&&l(_a),a&&l(Aa),a&&l(Ka),a&&l(Ia),a&&l(Ba),a&&l(Ra),a&&l(Ua),a&&l(Za),a&&l(an),a&&l(nn),a&&l(sn),a&&l(dn),a&&l(mn),a&&l(vn),a&&l(bn),a&&l(yn),a&&l(wn),a&&l(On),a&&l(Tn),a&&l(Pn),a&&l(Sn),a&&l(Hn),a&&l(_n),a&&l(Kn),a&&l(Ln)}}}class f extends a{constructor(a){super(),n(this,a,null,m,s,{})}}export{f as default};
