import{S as n,i as a,s,e as t,t as o,k as e,c as p,a as c,g as r,d as l,n as u,b as i,f as k,D as f,E as h}from"../../../chunks/vendor-3d5021e0.js";function d(n){let a,s,d,m,g,v,y,w,S,E,b,P,I,L,j,O,H,A,_,x,C,M,T,W,D,J,R,F,N,U,Z,B,z,$,G,q,K,Q,V,X,Y,nn,an,sn,tn,on,en,pn,cn,rn,ln,un,kn,fn,hn,dn,mn,gn,vn,yn,wn,Sn,En,bn,Pn,In,Ln,jn,On,Hn,An,_n,xn,Cn,Mn,Tn,Wn,Dn,Jn,Rn,Fn,Nn,Un,Zn,Bn,zn,$n,Gn,qn,Kn,Qn,Vn,Xn,Yn,na,aa,sa,ta,oa,ea,pa,ca,ra,la,ua,ia,ka,fa;return{c(){a=t("p"),s=o("Transforming data between "),d=t("a"),m=o("Svelte\nstores"),g=o("\nand browser localStorage."),v=e(),y=t("hr"),w=e(),S=t("h2"),E=o("Previously"),b=e(),P=t("p"),I=o("In "),L=t("a"),j=o("part I"),O=o(" we wrapped\n"),H=t("code"),A=o("localStorage.setItem()"),_=o(" and "),x=t("code"),C=o("localStorage.getItem()"),M=o(" behind a "),T=t("a"),W=o("Svelte\nstore"),D=o(". In "),J=t("a"),R=o("part\nII"),F=o(" we wrapped our store creator behind\nfunctions that handled different types."),N=e(),U=t("h2"),Z=o("Arbitrary functions?"),B=e(),z=t("p"),$=o("We can add functions that transform data to and from localStorage, similar to\nthe "),G=t("code"),q=o("reviver"),K=o(" parameter of\n"),Q=t("a"),V=t("code"),X=o("JSON.parse"),Y=o("."),nn=e(),an=t("h3"),sn=o("Why?"),tn=e(),on=t("p"),en=o("Arbitrary functions on data may be useful, such as compressing large structures\nwhen they are written to localStorage in order to save space."),pn=e(),cn=t("h2"),rn=o("Our goal?"),ln=e(),un=t("p"),kn=o("Provide a way to supply user-defined functions to our custom store that will\ntransform data to and from localStorage."),fn=e(),hn=t("h2"),dn=o("Method"),mn=e(),gn=t("p"),vn=o("We modify "),yn=t("code"),wn=o("createLocalStorage"),Sn=o(" to accept an arbitrary number of push and\npull functions, which will be applied in order:"),En=e(),bn=t("pre"),Pn=e(),In=t("p"),Ln=o("Existing wrapper functions are adjusted a little:"),jn=e(),On=t("pre"),Hn=e(),An=t("p"),_n=o("and new wrapper functions that do multiple transforms must apply them in the right\norder:"),xn=e(),Cn=t("pre"),Mn=e(),Tn=t("h2"),Wn=o("Usage"),Dn=e(),Jn=t("p"),Rn=o("Little change to our store (say, "),Fn=t("code"),Nn=o("./store.js"),Un=o("):"),Zn=e(),Bn=t("pre"),zn=e(),$n=t("p"),Gn=o("and our components don’t know the difference:"),qn=e(),Kn=t("pre"),Qn=e(),Vn=t("h2"),Xn=o("Summary"),Yn=e(),na=t("p"),aa=o("We have created a way to supply user-defined data transform functions to our\ncustom store backed by localStorage. There is no change to our developers -\nthey use these custom stores exactly how they use regular stores."),sa=e(),ta=t("h2"),oa=o("More information"),ea=e(),pa=t("ul"),ca=t("li"),ra=t("a"),la=o("Part I"),ua=e(),ia=t("li"),ka=t("a"),fa=o("Part II"),this.h()},l(n){a=p(n,"P",{});var t=c(a);s=r(t,"Transforming data between "),d=p(t,"A",{href:!0,rel:!0});var o=c(d);m=r(o,"Svelte\nstores"),o.forEach(l),g=r(t,"\nand browser localStorage."),t.forEach(l),v=u(n),y=p(n,"HR",{}),w=u(n),S=p(n,"H2",{});var e=c(S);E=r(e,"Previously"),e.forEach(l),b=u(n),P=p(n,"P",{});var i=c(P);I=r(i,"In "),L=p(i,"A",{href:!0});var k=c(L);j=r(k,"part I"),k.forEach(l),O=r(i," we wrapped\n"),H=p(i,"CODE",{});var f=c(H);A=r(f,"localStorage.setItem()"),f.forEach(l),_=r(i," and "),x=p(i,"CODE",{});var h=c(x);C=r(h,"localStorage.getItem()"),h.forEach(l),M=r(i," behind a "),T=p(i,"A",{href:!0,rel:!0});var ha=c(T);W=r(ha,"Svelte\nstore"),ha.forEach(l),D=r(i,". In "),J=p(i,"A",{href:!0});var da=c(J);R=r(da,"part\nII"),da.forEach(l),F=r(i," we wrapped our store creator behind\nfunctions that handled different types."),i.forEach(l),N=u(n),U=p(n,"H2",{});var ma=c(U);Z=r(ma,"Arbitrary functions?"),ma.forEach(l),B=u(n),z=p(n,"P",{});var ga=c(z);$=r(ga,"We can add functions that transform data to and from localStorage, similar to\nthe "),G=p(ga,"CODE",{});var va=c(G);q=r(va,"reviver"),va.forEach(l),K=r(ga," parameter of\n"),Q=p(ga,"A",{href:!0,rel:!0});var ya=c(Q);V=p(ya,"CODE",{});var wa=c(V);X=r(wa,"JSON.parse"),wa.forEach(l),ya.forEach(l),Y=r(ga,"."),ga.forEach(l),nn=u(n),an=p(n,"H3",{});var Sa=c(an);sn=r(Sa,"Why?"),Sa.forEach(l),tn=u(n),on=p(n,"P",{});var Ea=c(on);en=r(Ea,"Arbitrary functions on data may be useful, such as compressing large structures\nwhen they are written to localStorage in order to save space."),Ea.forEach(l),pn=u(n),cn=p(n,"H2",{});var ba=c(cn);rn=r(ba,"Our goal?"),ba.forEach(l),ln=u(n),un=p(n,"P",{});var Pa=c(un);kn=r(Pa,"Provide a way to supply user-defined functions to our custom store that will\ntransform data to and from localStorage."),Pa.forEach(l),fn=u(n),hn=p(n,"H2",{});var Ia=c(hn);dn=r(Ia,"Method"),Ia.forEach(l),mn=u(n),gn=p(n,"P",{});var La=c(gn);vn=r(La,"We modify "),yn=p(La,"CODE",{});var ja=c(yn);wn=r(ja,"createLocalStorage"),ja.forEach(l),Sn=r(La," to accept an arbitrary number of push and\npull functions, which will be applied in order:"),La.forEach(l),En=u(n),bn=p(n,"PRE",{class:!0}),c(bn).forEach(l),Pn=u(n),In=p(n,"P",{});var Oa=c(In);Ln=r(Oa,"Existing wrapper functions are adjusted a little:"),Oa.forEach(l),jn=u(n),On=p(n,"PRE",{class:!0}),c(On).forEach(l),Hn=u(n),An=p(n,"P",{});var Ha=c(An);_n=r(Ha,"and new wrapper functions that do multiple transforms must apply them in the right\norder:"),Ha.forEach(l),xn=u(n),Cn=p(n,"PRE",{class:!0}),c(Cn).forEach(l),Mn=u(n),Tn=p(n,"H2",{});var Aa=c(Tn);Wn=r(Aa,"Usage"),Aa.forEach(l),Dn=u(n),Jn=p(n,"P",{});var _a=c(Jn);Rn=r(_a,"Little change to our store (say, "),Fn=p(_a,"CODE",{});var xa=c(Fn);Nn=r(xa,"./store.js"),xa.forEach(l),Un=r(_a,"):"),_a.forEach(l),Zn=u(n),Bn=p(n,"PRE",{class:!0}),c(Bn).forEach(l),zn=u(n),$n=p(n,"P",{});var Ca=c($n);Gn=r(Ca,"and our components don’t know the difference:"),Ca.forEach(l),qn=u(n),Kn=p(n,"PRE",{class:!0}),c(Kn).forEach(l),Qn=u(n),Vn=p(n,"H2",{});var Ma=c(Vn);Xn=r(Ma,"Summary"),Ma.forEach(l),Yn=u(n),na=p(n,"P",{});var Ta=c(na);aa=r(Ta,"We have created a way to supply user-defined data transform functions to our\ncustom store backed by localStorage. There is no change to our developers -\nthey use these custom stores exactly how they use regular stores."),Ta.forEach(l),sa=u(n),ta=p(n,"H2",{});var Wa=c(ta);oa=r(Wa,"More information"),Wa.forEach(l),ea=u(n),pa=p(n,"UL",{});var Da=c(pa);ca=p(Da,"LI",{});var Ja=c(ca);ra=p(Ja,"A",{href:!0});var Ra=c(ra);la=r(Ra,"Part I"),Ra.forEach(l),Ja.forEach(l),ua=u(Da),ia=p(Da,"LI",{});var Fa=c(ia);ka=p(Fa,"A",{href:!0});var Na=c(ka);fa=r(Na,"Part II"),Na.forEach(l),Fa.forEach(l),Da.forEach(l),this.h()},h(){i(d,"href","https://svelte.dev/docs#4_Prefix_stores_with_$_to_access_their_values"),i(d,"rel","nofollow"),i(L,"href","/technical/svelte/persist-localStorage"),i(T,"href","https://svelte.dev/docs#svelte_store"),i(T,"rel","nofollow"),i(J,"href","/technical/svelte/persist-arbitrary"),i(Q,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#syntax"),i(Q,"rel","nofollow"),i(bn,"class","language-js"),i(On,"class","language-js"),i(Cn,"class","language-js"),i(Bn,"class","language-js"),i(Kn,"class","language-js"),i(ra,"href","/technical/svelte/persist-localStorage"),i(ka,"href","/technical/svelte/persist-arbitrary")},m(n,t){k(n,a,t),f(a,s),f(a,d),f(d,m),f(a,g),k(n,v,t),k(n,y,t),k(n,w,t),k(n,S,t),f(S,E),k(n,b,t),k(n,P,t),f(P,I),f(P,L),f(L,j),f(P,O),f(P,H),f(H,A),f(P,_),f(P,x),f(x,C),f(P,M),f(P,T),f(T,W),f(P,D),f(P,J),f(J,R),f(P,F),k(n,N,t),k(n,U,t),f(U,Z),k(n,B,t),k(n,z,t),f(z,$),f(z,G),f(G,q),f(z,K),f(z,Q),f(Q,V),f(V,X),f(z,Y),k(n,nn,t),k(n,an,t),f(an,sn),k(n,tn,t),k(n,on,t),f(on,en),k(n,pn,t),k(n,cn,t),f(cn,rn),k(n,ln,t),k(n,un,t),f(un,kn),k(n,fn,t),k(n,hn,t),f(hn,dn),k(n,mn,t),k(n,gn,t),f(gn,vn),f(gn,yn),f(yn,wn),f(gn,Sn),k(n,En,t),k(n,bn,t),bn.innerHTML='<code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> writable <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'svelte/store\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">transform</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fncs<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n    pullFn<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">fn</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">createLocalStorage</span> <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token parameter">key<span class="token punctuation">,</span>\n    init<span class="token punctuation">,</span>\n    pushFn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    pullFn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>\n<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">let</span> value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Pull from storage.</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        value <span class="token operator">=</span> <span class="token function">transform</span><span class="token punctuation">(</span>pullFn<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n        <span class="token comment">// Push to storage.</span>\n        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token function">transform</span><span class="token punctuation">(</span>pushFn<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        value <span class="token operator">=</span> init<span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n\n    <span class="token comment">// Create our store.</span>\n    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> subscribe<span class="token punctuation">,</span> set <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">writable</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n        subscribe<span class="token punctuation">,</span>\n        <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n            <span class="token comment">// Push to storage.</span>\n            localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token function">transform</span><span class="token punctuation">(</span>pushFn<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token function">set</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',k(n,Pn,t),k(n,In,t),f(In,Ln),k(n,jn,t),k(n,On,t),On.innerHTML='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createBooleanStorage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n    <span class="token function">createLocalStorage</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>\n        init<span class="token punctuation">,</span>\n        <span class="token punctuation">[</span> pushBoolean <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span> pullBoolean <span class="token punctuation">]</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span></code>',k(n,Hn,t),k(n,An,t),f(An,_n),k(n,xn,t),k(n,Cn,t),Cn.innerHTML='<code class="language-js"><span class="token keyword">import</span> LZString <span class="token keyword">from</span> <span class="token string">\'lz-string\'</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createCompressedStructureStorage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n    <span class="token function">createLocalStorage</span><span class="token punctuation">(</span>\n        name<span class="token punctuation">,</span>\n        init<span class="token punctuation">,</span>\n        <span class="token punctuation">[</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>stringify<span class="token punctuation">,</span> LZString<span class="token punctuation">.</span>compress <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span> LZString<span class="token punctuation">.</span>decompress<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>parse <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span></code>',k(n,Mn,t),k(n,Tn,t),f(Tn,Wn),k(n,Dn,t),k(n,Jn,t),f(Jn,Rn),f(Jn,Fn),f(Fn,Nn),f(Jn,Un),k(n,Zn,t),k(n,Bn,t),Bn.innerHTML='<code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>\n    createCompressedStructureStorage\n<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'./localStorage.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> smallStruct <span class="token operator">=</span> <span class="token function">createCompressedStructureStorage</span><span class="token punctuation">(</span>\n    <span class="token string">\'smallStruct\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',k(n,zn,t),k(n,$n,t),f($n,Gn),k(n,qn,t),k(n,Kn,t),Kn.innerHTML='<code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>\n    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> smallStruct <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'./store.js\'</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Assigned to application store _and_ written to</span>\n    <span class="token comment">// localStorage as an LZ compressed string in one go!</span>\n    $smallStruct <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n        hello<span class="token operator">:</span> <span class="token string">\'world\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code>',k(n,Qn,t),k(n,Vn,t),f(Vn,Xn),k(n,Yn,t),k(n,na,t),f(na,aa),k(n,sa,t),k(n,ta,t),f(ta,oa),k(n,ea,t),k(n,pa,t),f(pa,ca),f(ca,ra),f(ra,la),f(pa,ua),f(pa,ia),f(ia,ka),f(ka,fa)},p:h,i:h,o:h,d(n){n&&l(a),n&&l(v),n&&l(y),n&&l(w),n&&l(S),n&&l(b),n&&l(P),n&&l(N),n&&l(U),n&&l(B),n&&l(z),n&&l(nn),n&&l(an),n&&l(tn),n&&l(on),n&&l(pn),n&&l(cn),n&&l(ln),n&&l(un),n&&l(fn),n&&l(hn),n&&l(mn),n&&l(gn),n&&l(En),n&&l(bn),n&&l(Pn),n&&l(In),n&&l(jn),n&&l(On),n&&l(Hn),n&&l(An),n&&l(xn),n&&l(Cn),n&&l(Mn),n&&l(Tn),n&&l(Dn),n&&l(Jn),n&&l(Zn),n&&l(Bn),n&&l(zn),n&&l($n),n&&l(qn),n&&l(Kn),n&&l(Qn),n&&l(Vn),n&&l(Yn),n&&l(na),n&&l(sa),n&&l(ta),n&&l(ea),n&&l(pa)}}}class m extends n{constructor(n){super(),a(this,n,null,d,s,{})}}export{m as default};
