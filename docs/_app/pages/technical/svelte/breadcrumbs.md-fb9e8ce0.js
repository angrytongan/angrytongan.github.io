import{S as a,i as n,s,e as t,t as e,k as o,c as p,a as r,g as c,d as l,n as i,b as u,f as h,D as k,E as d}from"../../../chunks/vendor-5fde3abd.js";function m(a){let n,s,m,f,b,v,y,g,w,E,O,S,H,P,_,T,W,q,K,B,C,$,x,A,D,L,I,M,R,U,j,F,N,z,Q,G,J,V,X,Y,Z,aa,na,sa,ta,ea,oa,pa,ra,ca,la,ia,ua,ha,ka,da,ma,fa,ba,va,ya,ga,wa,Ea,Oa,Sa,Ha,Pa,_a,Ta,Wa,qa,Ka,Ba,Ca,$a,xa,Aa,Da,La,Ia,Ma,Ra,Ua,ja,Fa,Na,za,Qa,Ga,Ja,Va;return{c(){n=t("p"),s=e("A quick and dirty way to add breadcrumbs to your\n"),m=t("a"),f=e("SvelteKit"),b=e(" application."),v=o(),y=t("hr"),g=o(),w=t("h2"),E=e("What are breadcrumbs?"),O=o(),S=t("p"),H=e("Breadcrumbs provide a visual indicator to a user where they are located in the\nhierarchy of pages of a website. They also provide a quick way to navigate the\npath back to the root of the hierarchy by adding links:"),P=o(),_=t("blockquote"),T=t("u"),W=e("Home"),q=e(" > "),K=t("u"),B=e("Technical"),C=e(" > "),$=t("u"),x=e("Svelte"),A=e(" > Breadcrumbs"),D=o(),L=t("h2"),I=e("Our goal?"),M=o(),R=t("p"),U=e("We want to build a simple breadcrumb component. We do not want to manually\ninclude the component on each page, nor manage it’s contents. The component\nmust update every time the user moves to a different page."),j=o(),F=t("h2"),N=e("Method"),z=o(),Q=t("p"),G=e("SvelteKit uses a filesystem-based router. Files named "),J=t("code"),V=e("__layout.svelte"),X=e("\ndetermine the layout for the current page and pages below itself in the file\nhierarchy. We can use use SvelteKit’s store "),Y=t("code"),Z=e("page"),aa=e(" to determine what the current\npath is, and pass that location to a breadcrumb component which we add to the\nlayout."),na=o(),sa=t("h3"),ta=e("The breadcrumb component"),ea=o(),oa=t("p"),pa=e("Our breadcrumb component is a normal Svelte component, accepting the current\npath as a prop, and displays some variation of it as a breadcrumb (say\n"),ra=t("code"),ca=e("$lib/components/breadcrumb.svelte"),la=e("):"),ia=o(),ua=t("pre"),ha=o(),ka=t("h3"),da=t("code"),ma=e("__layout.svelte"),fa=o(),ba=t("p"),va=e("In "),ya=t("code"),ga=e("src/routes/__layout.svelte"),wa=e(", we pull out the page from "),Ea=t("code"),Oa=e("$app/stores"),Sa=e(", and\npass the path store to the breadcrumb component as a prop:"),Ha=o(),Pa=t("pre"),_a=o(),Ta=t("p"),Wa=e("An implementation can be seen on this website, at the top of the page."),qa=o(),Ka=t("h2"),Ba=e("Summary"),Ca=o(),$a=t("p"),xa=e("We created a breadcrumb component that is simple, requires no manual\nintervention for either it’s inclusion or management, and is fully\nreactive. New pages can be added to the application with no regard to\nthe breadcrumb, and it will act accordingly."),Aa=o(),Da=t("h3"),La=e("Improvements"),Ia=o(),Ma=t("ul"),Ra=t("li"),Ua=e("Our example solution above only shows elements from the path. Real\napplications may want to change these to use language more contextually\ncorrect. One way would be to map each path token to a dictionary; this\nwould require maintaining the dictionary every time a new page is added."),ja=o(),Fa=t("h2"),Na=e("More information"),za=o(),Qa=t("ul"),Ga=t("li"),Ja=t("a"),Va=e("SvelteKit"),this.h()},l(a){n=p(a,"P",{});var t=r(n);s=c(t,"A quick and dirty way to add breadcrumbs to your\n"),m=p(t,"A",{href:!0,rel:!0});var e=r(m);f=c(e,"SvelteKit"),e.forEach(l),b=c(t," application."),t.forEach(l),v=i(a),y=p(a,"HR",{}),g=i(a),w=p(a,"H2",{});var o=r(w);E=c(o,"What are breadcrumbs?"),o.forEach(l),O=i(a),S=p(a,"P",{});var u=r(S);H=c(u,"Breadcrumbs provide a visual indicator to a user where they are located in the\nhierarchy of pages of a website. They also provide a quick way to navigate the\npath back to the root of the hierarchy by adding links:"),u.forEach(l),P=i(a),_=p(a,"BLOCKQUOTE",{});var h=r(_);T=p(h,"U",{});var k=r(T);W=c(k,"Home"),k.forEach(l),q=c(h," > "),K=p(h,"U",{});var d=r(K);B=c(d,"Technical"),d.forEach(l),C=c(h," > "),$=p(h,"U",{});var Xa=r($);x=c(Xa,"Svelte"),Xa.forEach(l),A=c(h," > Breadcrumbs"),h.forEach(l),D=i(a),L=p(a,"H2",{});var Ya=r(L);I=c(Ya,"Our goal?"),Ya.forEach(l),M=i(a),R=p(a,"P",{});var Za=r(R);U=c(Za,"We want to build a simple breadcrumb component. We do not want to manually\ninclude the component on each page, nor manage it’s contents. The component\nmust update every time the user moves to a different page."),Za.forEach(l),j=i(a),F=p(a,"H2",{});var an=r(F);N=c(an,"Method"),an.forEach(l),z=i(a),Q=p(a,"P",{});var nn=r(Q);G=c(nn,"SvelteKit uses a filesystem-based router. Files named "),J=p(nn,"CODE",{});var sn=r(J);V=c(sn,"__layout.svelte"),sn.forEach(l),X=c(nn,"\ndetermine the layout for the current page and pages below itself in the file\nhierarchy. We can use use SvelteKit’s store "),Y=p(nn,"CODE",{});var tn=r(Y);Z=c(tn,"page"),tn.forEach(l),aa=c(nn," to determine what the current\npath is, and pass that location to a breadcrumb component which we add to the\nlayout."),nn.forEach(l),na=i(a),sa=p(a,"H3",{});var en=r(sa);ta=c(en,"The breadcrumb component"),en.forEach(l),ea=i(a),oa=p(a,"P",{});var on=r(oa);pa=c(on,"Our breadcrumb component is a normal Svelte component, accepting the current\npath as a prop, and displays some variation of it as a breadcrumb (say\n"),ra=p(on,"CODE",{});var pn=r(ra);ca=c(pn,"$lib/components/breadcrumb.svelte"),pn.forEach(l),la=c(on,"):"),on.forEach(l),ia=i(a),ua=p(a,"PRE",{class:!0}),r(ua).forEach(l),ha=i(a),ka=p(a,"H3",{});var rn=r(ka);da=p(rn,"CODE",{});var cn=r(da);ma=c(cn,"__layout.svelte"),cn.forEach(l),rn.forEach(l),fa=i(a),ba=p(a,"P",{});var ln=r(ba);va=c(ln,"In "),ya=p(ln,"CODE",{});var un=r(ya);ga=c(un,"src/routes/__layout.svelte"),un.forEach(l),wa=c(ln,", we pull out the page from "),Ea=p(ln,"CODE",{});var hn=r(Ea);Oa=c(hn,"$app/stores"),hn.forEach(l),Sa=c(ln,", and\npass the path store to the breadcrumb component as a prop:"),ln.forEach(l),Ha=i(a),Pa=p(a,"PRE",{class:!0}),r(Pa).forEach(l),_a=i(a),Ta=p(a,"P",{});var kn=r(Ta);Wa=c(kn,"An implementation can be seen on this website, at the top of the page."),kn.forEach(l),qa=i(a),Ka=p(a,"H2",{});var dn=r(Ka);Ba=c(dn,"Summary"),dn.forEach(l),Ca=i(a),$a=p(a,"P",{});var mn=r($a);xa=c(mn,"We created a breadcrumb component that is simple, requires no manual\nintervention for either it’s inclusion or management, and is fully\nreactive. New pages can be added to the application with no regard to\nthe breadcrumb, and it will act accordingly."),mn.forEach(l),Aa=i(a),Da=p(a,"H3",{});var fn=r(Da);La=c(fn,"Improvements"),fn.forEach(l),Ia=i(a),Ma=p(a,"UL",{});var bn=r(Ma);Ra=p(bn,"LI",{});var vn=r(Ra);Ua=c(vn,"Our example solution above only shows elements from the path. Real\napplications may want to change these to use language more contextually\ncorrect. One way would be to map each path token to a dictionary; this\nwould require maintaining the dictionary every time a new page is added."),vn.forEach(l),bn.forEach(l),ja=i(a),Fa=p(a,"H2",{});var yn=r(Fa);Na=c(yn,"More information"),yn.forEach(l),za=i(a),Qa=p(a,"UL",{});var gn=r(Qa);Ga=p(gn,"LI",{});var wn=r(Ga);Ja=p(wn,"A",{href:!0,rel:!0});var En=r(Ja);Va=c(En,"SvelteKit"),En.forEach(l),wn.forEach(l),gn.forEach(l),this.h()},h(){u(m,"href","https://kit.svelte.dev"),u(m,"rel","nofollow"),u(ua,"class","language-js"),u(Pa,"class","language-js"),u(Ja,"href","https://kit.svelte.dev"),u(Ja,"rel","nofollow")},m(a,t){h(a,n,t),k(n,s),k(n,m),k(m,f),k(n,b),h(a,v,t),h(a,y,t),h(a,g,t),h(a,w,t),k(w,E),h(a,O,t),h(a,S,t),k(S,H),h(a,P,t),h(a,_,t),k(_,T),k(T,W),k(_,q),k(_,K),k(K,B),k(_,C),k(_,$),k($,x),k(_,A),h(a,D,t),h(a,L,t),k(L,I),h(a,M,t),h(a,R,t),k(R,U),h(a,j,t),h(a,F,t),k(F,N),h(a,z,t),h(a,Q,t),k(Q,G),k(Q,J),k(J,V),k(Q,X),k(Q,Y),k(Y,Z),k(Q,aa),h(a,na,t),h(a,sa,t),k(sa,ta),h(a,ea,t),h(a,oa,t),k(oa,pa),k(oa,ra),k(ra,ca),k(oa,la),h(a,ia,t),h(a,ua,t),ua.innerHTML='<code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>\n    <span class="token keyword">export</span> <span class="token keyword">let</span> path<span class="token punctuation">;</span>\n\n    $<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n        <span class="token comment">// Remove zero-length tokens.</span>\n        <span class="token keyword">const</span> tokens <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token operator">=></span> t <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Create &#123; label, href &#125; pairs for each token.</span>\n        <span class="token keyword">let</span> tokenPath <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n        crumbs <span class="token operator">=</span> tokens<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n            tokenPath <span class="token operator">+=</span> <span class="token string">\'/\'</span> <span class="token operator">+</span> t<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n                label<span class="token operator">:</span> t<span class="token punctuation">,</span>\n                href<span class="token operator">:</span> tokenPath<span class="token punctuation">,</span>\n            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// Add a way to get home too.</span>\n        crumbs<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> label<span class="token operator">:</span> <span class="token string">\'home\'</span><span class="token punctuation">,</span> href<span class="token operator">:</span> <span class="token string">\'/\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token punctuation">&#123;</span>#each crumbs <span class="token keyword">as</span> c<span class="token punctuation">,</span> i<span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> i <span class="token operator">==</span> crumbs<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span>\n        <span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>label<span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#123;</span><span class="token operator">:</span><span class="token keyword">else</span><span class="token punctuation">&#125;</span>\n        <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>href<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">&#123;</span>c<span class="token punctuation">.</span>label<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>\n    <span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#123;</span><span class="token operator">/</span>each<span class="token punctuation">&#125;</span></code>',h(a,ha,t),h(a,ka,t),k(ka,da),k(da,ma),h(a,fa,t),h(a,ba,t),k(ba,va),k(ba,ya),k(ya,ga),k(ba,wa),k(ba,Ea),k(Ea,Oa),k(ba,Sa),h(a,Ha,t),h(a,Pa,t),Pa.innerHTML='<code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>\n    <span class="token keyword">import</span> Breadcrumb <span class="token keyword">from</span> <span class="token string">\'$lib/components/Breadcrumb.svelte\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> page <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'$app/stores\'</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>Breadcrumb path<span class="token operator">=</span><span class="token punctuation">&#123;</span>$page<span class="token punctuation">.</span>path<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span></code>',h(a,_a,t),h(a,Ta,t),k(Ta,Wa),h(a,qa,t),h(a,Ka,t),k(Ka,Ba),h(a,Ca,t),h(a,$a,t),k($a,xa),h(a,Aa,t),h(a,Da,t),k(Da,La),h(a,Ia,t),h(a,Ma,t),k(Ma,Ra),k(Ra,Ua),h(a,ja,t),h(a,Fa,t),k(Fa,Na),h(a,za,t),h(a,Qa,t),k(Qa,Ga),k(Ga,Ja),k(Ja,Va)},p:d,i:d,o:d,d(a){a&&l(n),a&&l(v),a&&l(y),a&&l(g),a&&l(w),a&&l(O),a&&l(S),a&&l(P),a&&l(_),a&&l(D),a&&l(L),a&&l(M),a&&l(R),a&&l(j),a&&l(F),a&&l(z),a&&l(Q),a&&l(na),a&&l(sa),a&&l(ea),a&&l(oa),a&&l(ia),a&&l(ua),a&&l(ha),a&&l(ka),a&&l(fa),a&&l(ba),a&&l(Ha),a&&l(Pa),a&&l(_a),a&&l(Ta),a&&l(qa),a&&l(Ka),a&&l(Ca),a&&l($a),a&&l(Aa),a&&l(Da),a&&l(Ia),a&&l(Ma),a&&l(ja),a&&l(Fa),a&&l(za),a&&l(Qa)}}}class f extends a{constructor(a){super(),n(this,a,null,m,s,{})}}export{f as default};
