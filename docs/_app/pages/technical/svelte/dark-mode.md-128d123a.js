import{S as Rt,i as zt,s as Ft,r as p,x as o,a as i,u as r,v as c,y as n,n as s,d as u,w as f,f as l,I as t,C as Qs}from"../../../chunks/index-077af1fa.js";function Kt(Ht){let v,Be,C,Ge,Je,fe,he,me,j,Ne,de,q,Qe,ke,U,Ve,ve,R,Xe,be,z,Ye,_e,F,Ze,we,m,ge,L,es,ss,ee,ts,as,W,os,ns,Ee,K,ls,ye,_,ps,se,rs,cs,Se,A,Dt=`<code class="language-css"><span class="token selector">.light</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #121212<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">.dark</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #121212<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #aaa<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Ce,B,is,Le,w,us,te,fs,hs,We,P,Ot=`<code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> writable <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte/store'</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> colourScheme <span class="token operator">=</span> <span class="token function">writable</span><span class="token punctuation">(</span><span class="token string">'light'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Ae,G,ms,Pe,d,ds,ae,ks,vs,oe,bs,_s,ne,ws,Es,Te,T,It=`<code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> colourScheme <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./store.js'</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> schemes <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">'light'</span><span class="token punctuation">,</span> <span class="token string">'dark'</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">...</span>schemes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>$colourScheme<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>

<span class="token operator">&lt;</span>select bind<span class="token operator">:</span>value<span class="token operator">=</span><span class="token punctuation">&#123;</span>$colourScheme<span class="token punctuation">&#125;</span><span class="token operator">></span>
    <span class="token punctuation">&#123;</span>#each schemes <span class="token keyword">as</span> s<span class="token punctuation">&#125;</span>
        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">&#123;</span>s<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>
    <span class="token punctuation">&#123;</span><span class="token operator">/</span>each<span class="token punctuation">&#125;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span></code>`,xe,J,ys,He,N,Ss,De,x,Mt=`<code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>
    <span class="token keyword">import</span> ColourScheme <span class="token keyword">from</span> <span class="token string">'./ColourScheme.svelte'</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>

<span class="token operator">&lt;</span>ColourScheme <span class="token operator">/</span><span class="token operator">></span></code>`,Oe,Q,Cs,Ie,V,Ls,Me,X,Ws,$e,Y,As,je,b,le,Ps,Ts,H,xs,D,Hs,Ds,Os,h,O,Is,Ms,pe,$s,js,re,qs,Us,ce,Rs,zs,I,Fs,Ks,qe,Z,Bs,Ue,E,ie,M,Gs,Js,ue,$,Ns;return{c(){v=p("p"),Be=o("A simple way to toggle light and dark mode in a "),C=p("a"),Ge=o("Svelte"),Je=o(`
application.`),fe=i(),he=p("hr"),me=i(),j=p("h2"),Ne=o("What is dark mode?"),de=i(),q=p("p"),Qe=o(`When enabled on a website, dark mode (also \u201Cnight mode\u201D) reduces
the amount of light emitted by a screen by changing the palette of colours
it uses. For instance, changing the background from a paper-white to a dark
gray, and text colour from black to light gray.`),ke=i(),U=p("p"),Ve=o(`Dark mode can be more comfortable to use in low-light conditions. Some
technologies, such as OLED panels, may consume less power which is better
suited for mobile devices.`),ve=i(),R=p("h2"),Xe=o("Our goal?"),be=i(),z=p("p"),Ye=o(`We want a component that allows the user to change between light and dark
mode. Third party components should also be notified of the colour mode.`),_e=i(),F=p("h2"),Ze=o("Method"),we=i(),m=p("p"),ge=o(`We specify a dark style in our application stylesheet. When triggered,
we manipulate
`),L=p("a"),es=o("Element.classList"),ss=o(`
on `),ee=p("code"),ts=o("<body>"),as=o(` to add or remove this class. We use a Svelte
`),W=p("a"),os=o("store"),ns=o(`
to track the change, which allows third-party components to alter their
rendering.`),Ee=i(),K=p("h3"),ls=o("The CSS"),ye=i(),_=p("p"),ps=o("A very simple implementation of the CSS required may look like (say "),se=p("code"),rs=o("static/styles.css"),cs=o("):"),Se=i(),A=p("pre"),Ce=i(),B=p("h3"),is=o("The store"),Le=i(),w=p("p"),us=o("We track the selected mode in our store, say "),te=p("code"),fs=o("store.js"),hs=o(":"),We=i(),P=p("pre"),Ae=i(),G=p("h3"),ms=o("The component"),Pe=i(),d=p("p"),ds=o("A "),ae=p("code"),ks=o("<select>"),vs=o(` element allows the user to switch between modes. We bind
to `),oe=p("code"),bs=o("$colourScheme"),_s=o(` so any subscribers will get notification of the change
(say `),ne=p("code"),ws=o("./ColourScheme.svelte"),Es=o("):"),Te=i(),T=p("pre"),xe=i(),J=p("h2"),ys=o("Usage"),He=i(),N=p("p"),Ss=o("Include the component wherever it\u2019s required:"),De=i(),x=p("pre"),Oe=i(),Q=p("p"),Cs=o("An implementation can be seen on this website, at the top of the page."),Ie=i(),V=p("h2"),Ls=o("Summary"),Me=i(),X=p("p"),Ws=o("We created a component that allows the user to choose between two colour modes, specified in CSS. The chosen colour mode is stored in a Svelte store, available to other subscribed components."),$e=i(),Y=p("h3"),As=o("Improvements"),je=i(),b=p("ul"),le=p("li"),Ps=o(`Some applications may require extending light / dark mode to a generic
\u201Ctheme\u201D mode, where selection from a number of palettes can be
performed by the user. Extending the above solution would be trivial for this
case.`),Ts=i(),H=p("li"),xs=o(`The solution demonstrated above ignores the CSS media
`),D=p("a"),Hs=o("prefers-color-scheme"),Ds=o(`. At a minimum, the default selection for the mode chooser should
adhere to the value of this feature.`),Os=i(),h=p("li"),O=p("a"),Is=o("SvelteKit"),Ms=o(` performs server-side rendering of the
application, so `),pe=p("code"),$s=o("document"),js=o(` is not available and the reference to it in
the above example will fail. This should be guarded by `),re=p("code"),qs=o("browser"),Us=o(` from
`),ce=p("code"),Rs=o("$app/env"),zs=o(`. More details
`),I=p("a"),Fs=o("here"),Ks=o("."),qe=i(),Z=p("h2"),Bs=o("More information"),Ue=i(),E=p("ul"),ie=p("li"),M=p("a"),Gs=o("Element.classList"),Js=i(),ue=p("li"),$=p("a"),Ns=o("Svelte stores"),this.h()},l(e){v=r(e,"P",{});var a=c(v);Be=n(a,"A simple way to toggle light and dark mode in a "),C=r(a,"A",{href:!0,rel:!0});var Vs=c(C);Ge=n(Vs,"Svelte"),Vs.forEach(s),Je=n(a,`
application.`),a.forEach(s),fe=u(e),he=r(e,"HR",{}),me=u(e),j=r(e,"H2",{});var Xs=c(j);Ne=n(Xs,"What is dark mode?"),Xs.forEach(s),de=u(e),q=r(e,"P",{});var Ys=c(q);Qe=n(Ys,`When enabled on a website, dark mode (also \u201Cnight mode\u201D) reduces
the amount of light emitted by a screen by changing the palette of colours
it uses. For instance, changing the background from a paper-white to a dark
gray, and text colour from black to light gray.`),Ys.forEach(s),ke=u(e),U=r(e,"P",{});var Zs=c(U);Ve=n(Zs,`Dark mode can be more comfortable to use in low-light conditions. Some
technologies, such as OLED panels, may consume less power which is better
suited for mobile devices.`),Zs.forEach(s),ve=u(e),R=r(e,"H2",{});var gs=c(R);Xe=n(gs,"Our goal?"),gs.forEach(s),be=u(e),z=r(e,"P",{});var et=c(z);Ye=n(et,`We want a component that allows the user to change between light and dark
mode. Third party components should also be notified of the colour mode.`),et.forEach(s),_e=u(e),F=r(e,"H2",{});var st=c(F);Ze=n(st,"Method"),st.forEach(s),we=u(e),m=r(e,"P",{});var y=c(m);ge=n(y,`We specify a dark style in our application stylesheet. When triggered,
we manipulate
`),L=r(y,"A",{href:!0,rel:!0});var tt=c(L);es=n(tt,"Element.classList"),tt.forEach(s),ss=n(y,`
on `),ee=r(y,"CODE",{});var at=c(ee);ts=n(at,"<body>"),at.forEach(s),as=n(y,` to add or remove this class. We use a Svelte
`),W=r(y,"A",{href:!0,rel:!0});var ot=c(W);os=n(ot,"store"),ot.forEach(s),ns=n(y,`
to track the change, which allows third-party components to alter their
rendering.`),y.forEach(s),Ee=u(e),K=r(e,"H3",{});var nt=c(K);ls=n(nt,"The CSS"),nt.forEach(s),ye=u(e),_=r(e,"P",{});var Re=c(_);ps=n(Re,"A very simple implementation of the CSS required may look like (say "),se=r(Re,"CODE",{});var lt=c(se);rs=n(lt,"static/styles.css"),lt.forEach(s),cs=n(Re,"):"),Re.forEach(s),Se=u(e),A=r(e,"PRE",{class:!0});var $t=c(A);$t.forEach(s),Ce=u(e),B=r(e,"H3",{});var pt=c(B);is=n(pt,"The store"),pt.forEach(s),Le=u(e),w=r(e,"P",{});var ze=c(w);us=n(ze,"We track the selected mode in our store, say "),te=r(ze,"CODE",{});var rt=c(te);fs=n(rt,"store.js"),rt.forEach(s),hs=n(ze,":"),ze.forEach(s),We=u(e),P=r(e,"PRE",{class:!0});var jt=c(P);jt.forEach(s),Ae=u(e),G=r(e,"H3",{});var ct=c(G);ms=n(ct,"The component"),ct.forEach(s),Pe=u(e),d=r(e,"P",{});var S=c(d);ds=n(S,"A "),ae=r(S,"CODE",{});var it=c(ae);ks=n(it,"<select>"),it.forEach(s),vs=n(S,` element allows the user to switch between modes. We bind
to `),oe=r(S,"CODE",{});var ut=c(oe);bs=n(ut,"$colourScheme"),ut.forEach(s),_s=n(S,` so any subscribers will get notification of the change
(say `),ne=r(S,"CODE",{});var ft=c(ne);ws=n(ft,"./ColourScheme.svelte"),ft.forEach(s),Es=n(S,"):"),S.forEach(s),Te=u(e),T=r(e,"PRE",{class:!0});var qt=c(T);qt.forEach(s),xe=u(e),J=r(e,"H2",{});var ht=c(J);ys=n(ht,"Usage"),ht.forEach(s),He=u(e),N=r(e,"P",{});var mt=c(N);Ss=n(mt,"Include the component wherever it\u2019s required:"),mt.forEach(s),De=u(e),x=r(e,"PRE",{class:!0});var Ut=c(x);Ut.forEach(s),Oe=u(e),Q=r(e,"P",{});var dt=c(Q);Cs=n(dt,"An implementation can be seen on this website, at the top of the page."),dt.forEach(s),Ie=u(e),V=r(e,"H2",{});var kt=c(V);Ls=n(kt,"Summary"),kt.forEach(s),Me=u(e),X=r(e,"P",{});var vt=c(X);Ws=n(vt,"We created a component that allows the user to choose between two colour modes, specified in CSS. The chosen colour mode is stored in a Svelte store, available to other subscribed components."),vt.forEach(s),$e=u(e),Y=r(e,"H3",{});var bt=c(Y);As=n(bt,"Improvements"),bt.forEach(s),je=u(e),b=r(e,"UL",{});var g=c(b);le=r(g,"LI",{});var _t=c(le);Ps=n(_t,`Some applications may require extending light / dark mode to a generic
\u201Ctheme\u201D mode, where selection from a number of palettes can be
performed by the user. Extending the above solution would be trivial for this
case.`),_t.forEach(s),Ts=u(g),H=r(g,"LI",{});var Fe=c(H);xs=n(Fe,`The solution demonstrated above ignores the CSS media
`),D=r(Fe,"A",{href:!0,rel:!0});var wt=c(D);Hs=n(wt,"prefers-color-scheme"),wt.forEach(s),Ds=n(Fe,`. At a minimum, the default selection for the mode chooser should
adhere to the value of this feature.`),Fe.forEach(s),Os=u(g),h=r(g,"LI",{});var k=c(h);O=r(k,"A",{href:!0,rel:!0});var Et=c(O);Is=n(Et,"SvelteKit"),Et.forEach(s),Ms=n(k,` performs server-side rendering of the
application, so `),pe=r(k,"CODE",{});var yt=c(pe);$s=n(yt,"document"),yt.forEach(s),js=n(k,` is not available and the reference to it in
the above example will fail. This should be guarded by `),re=r(k,"CODE",{});var St=c(re);qs=n(St,"browser"),St.forEach(s),Us=n(k,` from
`),ce=r(k,"CODE",{});var Ct=c(ce);Rs=n(Ct,"$app/env"),Ct.forEach(s),zs=n(k,`. More details
`),I=r(k,"A",{href:!0,rel:!0});var Lt=c(I);Fs=n(Lt,"here"),Lt.forEach(s),Ks=n(k,"."),k.forEach(s),g.forEach(s),qe=u(e),Z=r(e,"H2",{});var Wt=c(Z);Bs=n(Wt,"More information"),Wt.forEach(s),Ue=u(e),E=r(e,"UL",{});var Ke=c(E);ie=r(Ke,"LI",{});var At=c(ie);M=r(At,"A",{href:!0,rel:!0});var Pt=c(M);Gs=n(Pt,"Element.classList"),Pt.forEach(s),At.forEach(s),Js=u(Ke),ue=r(Ke,"LI",{});var Tt=c(ue);$=r(Tt,"A",{href:!0,rel:!0});var xt=c($);Ns=n(xt,"Svelte stores"),xt.forEach(s),Tt.forEach(s),Ke.forEach(s),this.h()},h(){f(C,"href","https://svelte.dev"),f(C,"rel","nofollow"),f(L,"href","https://developer.mozilla.org/en-US/docs/Web/API/Element/classList"),f(L,"rel","nofollow"),f(W,"href","https://svelte.dev/docs#4_Prefix_stores_with_$_to_access_their_values"),f(W,"rel","nofollow"),f(A,"class","language-css"),f(P,"class","language-js"),f(T,"class","language-js"),f(x,"class","language-js"),f(D,"href","https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme"),f(D,"rel","nofollow"),f(O,"href","https://kit.svelte.dev"),f(O,"rel","nofollow"),f(I,"href","https://kit.svelte.dev/docs#modules-$app-env"),f(I,"rel","nofollow"),f(M,"href","https://developer.mozilla.org/en-US/docs/Web/API/Element/classList"),f(M,"rel","nofollow"),f($,"href","https://svelte.dev/docs#4_Prefix_stores_with_$_to_access_their_values"),f($,"rel","nofollow")},m(e,a){l(e,v,a),t(v,Be),t(v,C),t(C,Ge),t(v,Je),l(e,fe,a),l(e,he,a),l(e,me,a),l(e,j,a),t(j,Ne),l(e,de,a),l(e,q,a),t(q,Qe),l(e,ke,a),l(e,U,a),t(U,Ve),l(e,ve,a),l(e,R,a),t(R,Xe),l(e,be,a),l(e,z,a),t(z,Ye),l(e,_e,a),l(e,F,a),t(F,Ze),l(e,we,a),l(e,m,a),t(m,ge),t(m,L),t(L,es),t(m,ss),t(m,ee),t(ee,ts),t(m,as),t(m,W),t(W,os),t(m,ns),l(e,Ee,a),l(e,K,a),t(K,ls),l(e,ye,a),l(e,_,a),t(_,ps),t(_,se),t(se,rs),t(_,cs),l(e,Se,a),l(e,A,a),A.innerHTML=Dt,l(e,Ce,a),l(e,B,a),t(B,is),l(e,Le,a),l(e,w,a),t(w,us),t(w,te),t(te,fs),t(w,hs),l(e,We,a),l(e,P,a),P.innerHTML=Ot,l(e,Ae,a),l(e,G,a),t(G,ms),l(e,Pe,a),l(e,d,a),t(d,ds),t(d,ae),t(ae,ks),t(d,vs),t(d,oe),t(oe,bs),t(d,_s),t(d,ne),t(ne,ws),t(d,Es),l(e,Te,a),l(e,T,a),T.innerHTML=It,l(e,xe,a),l(e,J,a),t(J,ys),l(e,He,a),l(e,N,a),t(N,Ss),l(e,De,a),l(e,x,a),x.innerHTML=Mt,l(e,Oe,a),l(e,Q,a),t(Q,Cs),l(e,Ie,a),l(e,V,a),t(V,Ls),l(e,Me,a),l(e,X,a),t(X,Ws),l(e,$e,a),l(e,Y,a),t(Y,As),l(e,je,a),l(e,b,a),t(b,le),t(le,Ps),t(b,Ts),t(b,H),t(H,xs),t(H,D),t(D,Hs),t(H,Ds),t(b,Os),t(b,h),t(h,O),t(O,Is),t(h,Ms),t(h,pe),t(pe,$s),t(h,js),t(h,re),t(re,qs),t(h,Us),t(h,ce),t(ce,Rs),t(h,zs),t(h,I),t(I,Fs),t(h,Ks),l(e,qe,a),l(e,Z,a),t(Z,Bs),l(e,Ue,a),l(e,E,a),t(E,ie),t(ie,M),t(M,Gs),t(E,Js),t(E,ue),t(ue,$),t($,Ns)},p:Qs,i:Qs,o:Qs,d(e){e&&s(v),e&&s(fe),e&&s(he),e&&s(me),e&&s(j),e&&s(de),e&&s(q),e&&s(ke),e&&s(U),e&&s(ve),e&&s(R),e&&s(be),e&&s(z),e&&s(_e),e&&s(F),e&&s(we),e&&s(m),e&&s(Ee),e&&s(K),e&&s(ye),e&&s(_),e&&s(Se),e&&s(A),e&&s(Ce),e&&s(B),e&&s(Le),e&&s(w),e&&s(We),e&&s(P),e&&s(Ae),e&&s(G),e&&s(Pe),e&&s(d),e&&s(Te),e&&s(T),e&&s(xe),e&&s(J),e&&s(He),e&&s(N),e&&s(De),e&&s(x),e&&s(Oe),e&&s(Q),e&&s(Ie),e&&s(V),e&&s(Me),e&&s(X),e&&s($e),e&&s(Y),e&&s(je),e&&s(b),e&&s(qe),e&&s(Z),e&&s(Ue),e&&s(E)}}}class Gt extends Rt{constructor(v){super(),zt(this,v,null,Kt,Ft,{})}}export{Gt as default};
